# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: npm-publish

on:
  release:
    types: [published]
  push:
    branches:
      - develop
      - staging
      - main # Change this to your default branch

jobs:
  packages:
    name: Yarn packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: 'https://npm.pkg.github.com'
          scope: '@plitzi'

      - name: Cache Yarn
        id: cache-yarn-packages
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn Token
        run: |
          echo "npmAuthToken: ${{ secrets.NPM_AUTH_TOKEN }}" >> $HOME/.yarnrc.yml

      - name: Yarn Install
        if: steps.cache-yarn-packages.outputs.cache-hit != 'true'
        run: yarn install # --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  lint:
    needs: packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Restore Cache
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn Lint
        run: yarn lint

      - name: Yarn Scss Lint
        run: yarn lint-style

  tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Restore Cache
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn Tests
        run: yarn test

  publish-github:
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v')
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Restore Cache
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn Build
        run: yarn build:prod

      - name: Yarn Token
        run: |
          echo "npmAuthToken: ${{ secrets.NPM_AUTH_TOKEN }}" >> $HOME/.yarnrc.yml
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Yarn Publish
        run: yarn npm publish
